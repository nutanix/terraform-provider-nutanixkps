// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// KialiMetrics KialiMetrics contains all simple metrics and histograms data
// swagger:model KialiMetrics
type KialiMetrics struct {

	// histograms
	Histograms map[string]map[string]KialiMetric `json:"histograms,omitempty"`

	// metrics
	Metrics map[string]KialiMetric `json:"metrics,omitempty"`
}

// Validate validates this kiali metrics
func (m *KialiMetrics) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHistograms(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetrics(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *KialiMetrics) validateHistograms(formats strfmt.Registry) error {

	if swag.IsZero(m.Histograms) { // not required
		return nil
	}

	for k := range m.Histograms {

		for kk := range m.Histograms[k] {

			if err := validate.Required("histograms"+"."+k+"."+kk, "body", m.Histograms[k][kk]); err != nil {
				return err
			}
			if val, ok := m.Histograms[k][kk]; ok {
				if err := val.Validate(formats); err != nil {
					return err
				}
			}

		}

	}

	return nil
}

func (m *KialiMetrics) validateMetrics(formats strfmt.Registry) error {

	if swag.IsZero(m.Metrics) { // not required
		return nil
	}

	for k := range m.Metrics {

		if err := validate.Required("metrics"+"."+k, "body", m.Metrics[k]); err != nil {
			return err
		}
		if val, ok := m.Metrics[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *KialiMetrics) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *KialiMetrics) UnmarshalBinary(b []byte) error {
	var res KialiMetrics
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
