// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RetentionInfo RetentionInfo capture info for retention
// swagger:model RetentionInfo
type RetentionInfo struct {

	// limit
	// Required: true
	Limit *int64 `json:"limit"`

	// Retention type can be Time or Size.
	// For Time based retention, limit is in seconds
	// and specifies how long the data should be retained.
	// For Size based retention, limit is in GB
	// and specifies up to the maximum capacity/amount of data
	// to retain.
	// Required: true
	// Enum: [Time Size]
	Type *string `json:"type"`
}

// Validate validates this retention info
func (m *RetentionInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLimit(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RetentionInfo) validateLimit(formats strfmt.Registry) error {

	if err := validate.Required("limit", "body", m.Limit); err != nil {
		return err
	}

	return nil
}

var retentionInfoTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Time","Size"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		retentionInfoTypeTypePropEnum = append(retentionInfoTypeTypePropEnum, v)
	}
}

const (

	// RetentionInfoTypeTime captures enum value "Time"
	RetentionInfoTypeTime string = "Time"

	// RetentionInfoTypeSize captures enum value "Size"
	RetentionInfoTypeSize string = "Size"
)

// prop value enum
func (m *RetentionInfo) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, retentionInfoTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *RetentionInfo) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RetentionInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RetentionInfo) UnmarshalBinary(b []byte) error {
	var res RetentionInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
