// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WorkloadItem workload item
// swagger:model WorkloadItem
type WorkloadItem struct {

	// Define if all Pods related to the Workload has an IstioSidecar deployed
	// Required: true
	IstioSidecar *bool `json:"istioSidecar"`

	// Name of a workload member of an application
	// Required: true
	WorkloadName *string `json:"workloadName"`
}

// Validate validates this workload item
func (m *WorkloadItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIstioSidecar(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWorkloadName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WorkloadItem) validateIstioSidecar(formats strfmt.Registry) error {

	if err := validate.Required("istioSidecar", "body", m.IstioSidecar); err != nil {
		return err
	}

	return nil
}

func (m *WorkloadItem) validateWorkloadName(formats strfmt.Registry) error {

	if err := validate.Required("workloadName", "body", m.WorkloadName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WorkloadItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorkloadItem) UnmarshalBinary(b []byte) error {
	var res WorkloadItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
