// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// K8sConfig K8sConfig is the kubernetes config information
// swagger:model K8sConfig
type K8sConfig struct {

	// ProviderConfig is the configuration defining the underlying kubernetes infrastructure. It will return
	// the config depending on the k8sProviderType
	// Required: true
	ProviderConfig interface{} `json:"providerConfig"`

	// ProviderType is the provider for kubernetes infrastructure
	// Required: true
	ProviderType *string `json:"providerType"`
}

// Validate validates this k8s config
func (m *K8sConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProviderConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProviderType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *K8sConfig) validateProviderConfig(formats strfmt.Registry) error {

	if err := validate.Required("providerConfig", "body", m.ProviderConfig); err != nil {
		return err
	}

	return nil
}

func (m *K8sConfig) validateProviderType(formats strfmt.Registry) error {

	if err := validate.Required("providerType", "body", m.ProviderType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *K8sConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *K8sConfig) UnmarshalBinary(b []byte) error {
	var res K8sConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
