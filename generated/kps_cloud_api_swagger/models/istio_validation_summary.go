// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IstioValidationSummary IstioValidationSummary represents the number of errors/warnings of a set of Istio Validations.
// swagger:model IstioValidationSummary
type IstioValidationSummary struct {

	// Number of validations with error severity
	// Required: true
	Errors *int64 `json:"errors"`

	// Number of Istio Objects analyzed
	// Required: true
	ObjectCount *int64 `json:"objectCount"`

	// Number of validations with warning severity
	// Required: true
	Warnings *int64 `json:"warnings"`
}

// Validate validates this istio validation summary
func (m *IstioValidationSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObjectCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWarnings(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IstioValidationSummary) validateErrors(formats strfmt.Registry) error {

	if err := validate.Required("errors", "body", m.Errors); err != nil {
		return err
	}

	return nil
}

func (m *IstioValidationSummary) validateObjectCount(formats strfmt.Registry) error {

	if err := validate.Required("objectCount", "body", m.ObjectCount); err != nil {
		return err
	}

	return nil
}

func (m *IstioValidationSummary) validateWarnings(formats strfmt.Registry) error {

	if err := validate.Required("warnings", "body", m.Warnings); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IstioValidationSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IstioValidationSummary) UnmarshalBinary(b []byte) error {
	var res IstioValidationSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
