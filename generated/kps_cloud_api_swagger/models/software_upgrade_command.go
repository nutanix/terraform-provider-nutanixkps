// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// SoftwareUpgradeCommand software upgrade command
// swagger:model SoftwareUpgradeCommand
type SoftwareUpgradeCommand string

const (

	// SoftwareUpgradeCommandUPGRADE captures enum value "UPGRADE"
	SoftwareUpgradeCommandUPGRADE SoftwareUpgradeCommand = "UPGRADE"
)

// for schema
var softwareUpgradeCommandEnum []interface{}

func init() {
	var res []SoftwareUpgradeCommand
	if err := json.Unmarshal([]byte(`["UPGRADE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		softwareUpgradeCommandEnum = append(softwareUpgradeCommandEnum, v)
	}
}

func (m SoftwareUpgradeCommand) validateSoftwareUpgradeCommandEnum(path, location string, value SoftwareUpgradeCommand) error {
	if err := validate.Enum(path, location, value, softwareUpgradeCommandEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this software upgrade command
func (m SoftwareUpgradeCommand) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSoftwareUpgradeCommandEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
