// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExecuteEdgeUpgradeID ExecuteEdgeUpgradeID is object model for ExecuteEdgeUpgradeID
// swagger:model ExecuteEdgeUpgradeID
type ExecuteEdgeUpgradeID struct {

	// ntnx:ignore
	// List of edge IDs to upgrade
	// Required: true
	EdgeID *string `json:"edgeId"`

	// Version to upgrade to, for the execute edge upgrade.
	// Required: true
	Release *string `json:"release"`
}

// Validate validates this execute edge upgrade ID
func (m *ExecuteEdgeUpgradeID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEdgeID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRelease(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExecuteEdgeUpgradeID) validateEdgeID(formats strfmt.Registry) error {

	if err := validate.Required("edgeId", "body", m.EdgeID); err != nil {
		return err
	}

	return nil
}

func (m *ExecuteEdgeUpgradeID) validateRelease(formats strfmt.Registry) error {

	if err := validate.Required("release", "body", m.Release); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExecuteEdgeUpgradeID) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExecuteEdgeUpgradeID) UnmarshalBinary(b []byte) error {
	var res ExecuteEdgeUpgradeID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
