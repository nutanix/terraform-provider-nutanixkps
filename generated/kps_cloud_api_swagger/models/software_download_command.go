// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// SoftwareDownloadCommand software download command
// swagger:model SoftwareDownloadCommand
type SoftwareDownloadCommand string

const (

	// SoftwareDownloadCommandDOWNLOAD captures enum value "DOWNLOAD"
	SoftwareDownloadCommandDOWNLOAD SoftwareDownloadCommand = "DOWNLOAD"

	// SoftwareDownloadCommandDOWNLOADCANCEL captures enum value "DOWNLOAD_CANCEL"
	SoftwareDownloadCommandDOWNLOADCANCEL SoftwareDownloadCommand = "DOWNLOAD_CANCEL"
)

// for schema
var softwareDownloadCommandEnum []interface{}

func init() {
	var res []SoftwareDownloadCommand
	if err := json.Unmarshal([]byte(`["DOWNLOAD","DOWNLOAD_CANCEL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		softwareDownloadCommandEnum = append(softwareDownloadCommandEnum, v)
	}
}

func (m SoftwareDownloadCommand) validateSoftwareDownloadCommandEnum(path, location string, value SoftwareDownloadCommand) error {
	if err := validate.Enum(path, location, value, softwareDownloadCommandEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this software download command
func (m SoftwareDownloadCommand) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSoftwareDownloadCommandEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
