// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// SoftwareUpdateBatchType software update batch type
// swagger:model SoftwareUpdateBatchType
type SoftwareUpdateBatchType string

const (

	// SoftwareUpdateBatchTypeDOWNLOAD captures enum value "DOWNLOAD"
	SoftwareUpdateBatchTypeDOWNLOAD SoftwareUpdateBatchType = "DOWNLOAD"

	// SoftwareUpdateBatchTypeUPGRADE captures enum value "UPGRADE"
	SoftwareUpdateBatchTypeUPGRADE SoftwareUpdateBatchType = "UPGRADE"
)

// for schema
var softwareUpdateBatchTypeEnum []interface{}

func init() {
	var res []SoftwareUpdateBatchType
	if err := json.Unmarshal([]byte(`["DOWNLOAD","UPGRADE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		softwareUpdateBatchTypeEnum = append(softwareUpdateBatchTypeEnum, v)
	}
}

func (m SoftwareUpdateBatchType) validateSoftwareUpdateBatchTypeEnum(path, location string, value SoftwareUpdateBatchType) error {
	if err := validate.Enum(path, location, value, softwareUpdateBatchTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this software update batch type
func (m SoftwareUpdateBatchType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSoftwareUpdateBatchTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
