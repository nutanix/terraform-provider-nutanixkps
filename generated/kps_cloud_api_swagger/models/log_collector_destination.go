// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LogCollectorDestination log collector destination
// swagger:model LogCollectorDestination
type LogCollectorDestination string

const (

	// LogCollectorDestinationCLOUDWATCH captures enum value "CLOUDWATCH"
	LogCollectorDestinationCLOUDWATCH LogCollectorDestination = "CLOUDWATCH"

	// LogCollectorDestinationKINESIS captures enum value "KINESIS"
	LogCollectorDestinationKINESIS LogCollectorDestination = "KINESIS"

	// LogCollectorDestinationFIREHOSE captures enum value "FIREHOSE"
	LogCollectorDestinationFIREHOSE LogCollectorDestination = "FIREHOSE"

	// LogCollectorDestinationSTACKDRIVER captures enum value "STACKDRIVER"
	LogCollectorDestinationSTACKDRIVER LogCollectorDestination = "STACKDRIVER"
)

// for schema
var logCollectorDestinationEnum []interface{}

func init() {
	var res []LogCollectorDestination
	if err := json.Unmarshal([]byte(`["CLOUDWATCH","KINESIS","FIREHOSE","STACKDRIVER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		logCollectorDestinationEnum = append(logCollectorDestinationEnum, v)
	}
}

func (m LogCollectorDestination) validateLogCollectorDestinationEnum(path, location string, value LogCollectorDestination) error {
	if err := validate.Enum(path, location, value, logCollectorDestinationEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this log collector destination
func (m LogCollectorDestination) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLogCollectorDestinationEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
