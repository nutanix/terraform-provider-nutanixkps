// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// AuditLogV2InsertRequest AuditLogV2InsertRequest is the request payload for InsertAuditLogV2
// swagger:model AuditLogV2InsertRequest
type AuditLogV2InsertRequest struct {

	// auditlog
	Auditlog *AuditLogV2 `json:"auditlog,omitempty"`
}

// Validate validates this audit log v2 insert request
func (m *AuditLogV2InsertRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuditlog(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AuditLogV2InsertRequest) validateAuditlog(formats strfmt.Registry) error {

	if swag.IsZero(m.Auditlog) { // not required
		return nil
	}

	if m.Auditlog != nil {
		if err := m.Auditlog.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("auditlog")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AuditLogV2InsertRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuditLogV2InsertRequest) UnmarshalBinary(b []byte) error {
	var res AuditLogV2InsertRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
