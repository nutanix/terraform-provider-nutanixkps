// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceOverview service overview
// swagger:model ServiceOverview
type ServiceOverview struct {

	// Has label app
	// Required: true
	AppLabel *bool `json:"appLabel"`

	// Define if Pods related to this Service has an IstioSidecar deployed
	// Required: true
	IstioSidecar *bool `json:"istioSidecar"`

	// Labels for Service
	Labels map[string]string `json:"labels,omitempty"`

	// Name of the Service
	// Required: true
	Name *string `json:"name"`

	// additional detail sample
	AdditionalDetailSample *AdditionalItem `json:"additionalDetailSample,omitempty"`
}

// Validate validates this service overview
func (m *ServiceOverview) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAppLabel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIstioSidecar(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAdditionalDetailSample(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceOverview) validateAppLabel(formats strfmt.Registry) error {

	if err := validate.Required("appLabel", "body", m.AppLabel); err != nil {
		return err
	}

	return nil
}

func (m *ServiceOverview) validateIstioSidecar(formats strfmt.Registry) error {

	if err := validate.Required("istioSidecar", "body", m.IstioSidecar); err != nil {
		return err
	}

	return nil
}

func (m *ServiceOverview) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *ServiceOverview) validateAdditionalDetailSample(formats strfmt.Registry) error {

	if swag.IsZero(m.AdditionalDetailSample) { // not required
		return nil
	}

	if m.AdditionalDetailSample != nil {
		if err := m.AdditionalDetailSample.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("additionalDetailSample")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceOverview) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceOverview) UnmarshalBinary(b []byte) error {
	var res ServiceOverview
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
