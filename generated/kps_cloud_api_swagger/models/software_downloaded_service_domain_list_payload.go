// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SoftwareDownloadedServiceDomainListPayload SoftwareDownloadedServiceDomainListPayload is the payload for batch list REST response
// swagger:model SoftwareDownloadedServiceDomainListPayload
type SoftwareDownloadedServiceDomainListPayload struct {

	// Specify result order. Zero or more entries with format: &ltkey> [desc]
	// where orderByKeys lists allowed keys in each response.
	OrderBy string `json:"orderBy,omitempty"`

	// Keys that can be used in orderBy.
	OrderByKeys []string `json:"orderByKeys"`

	// 0-based index of the page to fetch results.
	// Required: true
	PageIndex *int64 `json:"pageIndex"`

	// Item count of each page.
	// Required: true
	PageSize *int64 `json:"pageSize"`

	// list of service domains with the release downloaded
	// Required: true
	SvcDomainList []string `json:"result"`

	// Count of all items matching the query.
	// Required: true
	TotalCount *int64 `json:"totalCount"`
}

// Validate validates this software downloaded service domain list payload
func (m *SoftwareDownloadedServiceDomainListPayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePageIndex(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePageSize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSvcDomainList(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SoftwareDownloadedServiceDomainListPayload) validatePageIndex(formats strfmt.Registry) error {

	if err := validate.Required("pageIndex", "body", m.PageIndex); err != nil {
		return err
	}

	return nil
}

func (m *SoftwareDownloadedServiceDomainListPayload) validatePageSize(formats strfmt.Registry) error {

	if err := validate.Required("pageSize", "body", m.PageSize); err != nil {
		return err
	}

	return nil
}

func (m *SoftwareDownloadedServiceDomainListPayload) validateSvcDomainList(formats strfmt.Registry) error {

	if err := validate.Required("result", "body", m.SvcDomainList); err != nil {
		return err
	}

	return nil
}

func (m *SoftwareDownloadedServiceDomainListPayload) validateTotalCount(formats strfmt.Registry) error {

	if err := validate.Required("totalCount", "body", m.TotalCount); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SoftwareDownloadedServiceDomainListPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SoftwareDownloadedServiceDomainListPayload) UnmarshalBinary(b []byte) error {
	var res SoftwareDownloadedServiceDomainListPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
