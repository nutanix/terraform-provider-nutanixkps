// Code generated by go-swagger; DO NOT EDIT.

package sensor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "sherlock-terraform-provider-nutanixkps/generated/kps_cloud_api_swagger/models"
)

// SensorUpdateV3Reader is a Reader for the SensorUpdateV3 structure.
type SensorUpdateV3Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SensorUpdateV3Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSensorUpdateV3OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSensorUpdateV3Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSensorUpdateV3OK creates a SensorUpdateV3OK with default headers values
func NewSensorUpdateV3OK() *SensorUpdateV3OK {
	return &SensorUpdateV3OK{}
}

/*SensorUpdateV3OK handles this case with default header values.

Ok
*/
type SensorUpdateV3OK struct {
	Payload *models.UpdateDocumentResponseV2
}

func (o *SensorUpdateV3OK) Error() string {
	return fmt.Sprintf("[PUT /v1.0/sensors/{id}][%d] sensorUpdateV3OK  %+v", 200, o.Payload)
}

func (o *SensorUpdateV3OK) GetPayload() *models.UpdateDocumentResponseV2 {
	return o.Payload
}

func (o *SensorUpdateV3OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateDocumentResponseV2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSensorUpdateV3Default creates a SensorUpdateV3Default with default headers values
func NewSensorUpdateV3Default(code int) *SensorUpdateV3Default {
	return &SensorUpdateV3Default{
		_statusCode: code,
	}
}

/*SensorUpdateV3Default handles this case with default header values.

generic API error response
*/
type SensorUpdateV3Default struct {
	_statusCode int

	Payload *models.APIErrorPayload
}

// Code gets the status code for the sensor update v3 default response
func (o *SensorUpdateV3Default) Code() int {
	return o._statusCode
}

func (o *SensorUpdateV3Default) Error() string {
	return fmt.Sprintf("[PUT /v1.0/sensors/{id}][%d] SensorUpdateV3 default  %+v", o._statusCode, o.Payload)
}

func (o *SensorUpdateV3Default) GetPayload() *models.APIErrorPayload {
	return o.Payload
}

func (o *SensorUpdateV3Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
