// Code generated by go-swagger; DO NOT EDIT.

package kiali

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "sherlock-terraform-provider-nutanixkps/generated/kps_cloud_api_swagger/models"
)

// AppListReader is a Reader for the AppList structure.
type AppListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AppListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAppListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAppListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAppListOK creates a AppListOK with default headers values
func NewAppListOK() *AppListOK {
	return &AppListOK{}
}

/*AppListOK handles this case with default header values.

Listing all apps in the namespace
*/
type AppListOK struct {
	Payload *models.AppList
}

func (o *AppListOK) Error() string {
	return fmt.Sprintf("[GET /v1.0/kiali/namespaces/{namespace}/apps][%d] appListOK  %+v", 200, o.Payload)
}

func (o *AppListOK) GetPayload() *models.AppList {
	return o.Payload
}

func (o *AppListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppListDefault creates a AppListDefault with default headers values
func NewAppListDefault(code int) *AppListDefault {
	return &AppListDefault{
		_statusCode: code,
	}
}

/*AppListDefault handles this case with default header values.

generic API error response
*/
type AppListDefault struct {
	_statusCode int

	Payload *models.APIErrorPayload
}

// Code gets the status code for the app list default response
func (o *AppListDefault) Code() int {
	return o._statusCode
}

func (o *AppListDefault) Error() string {
	return fmt.Sprintf("[GET /v1.0/kiali/namespaces/{namespace}/apps][%d] appList default  %+v", o._statusCode, o.Payload)
}

func (o *AppListDefault) GetPayload() *models.APIErrorPayload {
	return o.Payload
}

func (o *AppListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
