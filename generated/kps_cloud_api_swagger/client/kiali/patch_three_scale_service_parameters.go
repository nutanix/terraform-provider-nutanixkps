// Code generated by go-swagger; DO NOT EDIT.

package kiali

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPatchThreeScaleServiceParams creates a new PatchThreeScaleServiceParams object
// with the default values initialized.
func NewPatchThreeScaleServiceParams() *PatchThreeScaleServiceParams {
	var ()
	return &PatchThreeScaleServiceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchThreeScaleServiceParamsWithTimeout creates a new PatchThreeScaleServiceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchThreeScaleServiceParamsWithTimeout(timeout time.Duration) *PatchThreeScaleServiceParams {
	var ()
	return &PatchThreeScaleServiceParams{

		timeout: timeout,
	}
}

// NewPatchThreeScaleServiceParamsWithContext creates a new PatchThreeScaleServiceParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchThreeScaleServiceParamsWithContext(ctx context.Context) *PatchThreeScaleServiceParams {
	var ()
	return &PatchThreeScaleServiceParams{

		Context: ctx,
	}
}

// NewPatchThreeScaleServiceParamsWithHTTPClient creates a new PatchThreeScaleServiceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchThreeScaleServiceParamsWithHTTPClient(client *http.Client) *PatchThreeScaleServiceParams {
	var ()
	return &PatchThreeScaleServiceParams{
		HTTPClient: client,
	}
}

/*PatchThreeScaleServiceParams contains all the parameters to send to the API endpoint
for the patch three scale service operation typically these are written to a http.Request
*/
type PatchThreeScaleServiceParams struct {

	/*Authorization
	  Format: Bearer &lt;token>, with &lt;token> from login API response.

	*/
	Authorization string
	/*Namespace
	  The namespace name.

	*/
	Namespace string
	/*Service
	  The service name.

	*/
	Service string
	/*ServiceDomain
	  ID of ServiceDomain to access.

	*/
	ServiceDomain string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch three scale service params
func (o *PatchThreeScaleServiceParams) WithTimeout(timeout time.Duration) *PatchThreeScaleServiceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch three scale service params
func (o *PatchThreeScaleServiceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch three scale service params
func (o *PatchThreeScaleServiceParams) WithContext(ctx context.Context) *PatchThreeScaleServiceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch three scale service params
func (o *PatchThreeScaleServiceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch three scale service params
func (o *PatchThreeScaleServiceParams) WithHTTPClient(client *http.Client) *PatchThreeScaleServiceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch three scale service params
func (o *PatchThreeScaleServiceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the patch three scale service params
func (o *PatchThreeScaleServiceParams) WithAuthorization(authorization string) *PatchThreeScaleServiceParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the patch three scale service params
func (o *PatchThreeScaleServiceParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithNamespace adds the namespace to the patch three scale service params
func (o *PatchThreeScaleServiceParams) WithNamespace(namespace string) *PatchThreeScaleServiceParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the patch three scale service params
func (o *PatchThreeScaleServiceParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithService adds the service to the patch three scale service params
func (o *PatchThreeScaleServiceParams) WithService(service string) *PatchThreeScaleServiceParams {
	o.SetService(service)
	return o
}

// SetService adds the service to the patch three scale service params
func (o *PatchThreeScaleServiceParams) SetService(service string) {
	o.Service = service
}

// WithServiceDomain adds the serviceDomain to the patch three scale service params
func (o *PatchThreeScaleServiceParams) WithServiceDomain(serviceDomain string) *PatchThreeScaleServiceParams {
	o.SetServiceDomain(serviceDomain)
	return o
}

// SetServiceDomain adds the serviceDomain to the patch three scale service params
func (o *PatchThreeScaleServiceParams) SetServiceDomain(serviceDomain string) {
	o.ServiceDomain = serviceDomain
}

// WriteToRequest writes these params to a swagger request
func (o *PatchThreeScaleServiceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	// path param service
	if err := r.SetPathParam("service", o.Service); err != nil {
		return err
	}

	// query param serviceDomain
	qrServiceDomain := o.ServiceDomain
	qServiceDomain := qrServiceDomain
	if qServiceDomain != "" {
		if err := r.SetQueryParam("serviceDomain", qServiceDomain); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
