// Code generated by go-swagger; DO NOT EDIT.

package kiali

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "sherlock-terraform-provider-nutanixkps/generated/kps_cloud_api_swagger/models"
)

// PatchThreeScaleServiceReader is a Reader for the PatchThreeScaleService structure.
type PatchThreeScaleServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchThreeScaleServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchThreeScaleServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPatchThreeScaleServiceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchThreeScaleServiceOK creates a PatchThreeScaleServiceOK with default headers values
func NewPatchThreeScaleServiceOK() *PatchThreeScaleServiceOK {
	return &PatchThreeScaleServiceOK{}
}

/*PatchThreeScaleServiceOK handles this case with default header values.

Return Threescale rule definition for a given service
*/
type PatchThreeScaleServiceOK struct {
	Payload *models.ThreeScaleServiceRule
}

func (o *PatchThreeScaleServiceOK) Error() string {
	return fmt.Sprintf("[PATCH /v1.0/kiali/threescale/namespaces/{namespace}/services/{service}][%d] patchThreeScaleServiceOK  %+v", 200, o.Payload)
}

func (o *PatchThreeScaleServiceOK) GetPayload() *models.ThreeScaleServiceRule {
	return o.Payload
}

func (o *PatchThreeScaleServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ThreeScaleServiceRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchThreeScaleServiceDefault creates a PatchThreeScaleServiceDefault with default headers values
func NewPatchThreeScaleServiceDefault(code int) *PatchThreeScaleServiceDefault {
	return &PatchThreeScaleServiceDefault{
		_statusCode: code,
	}
}

/*PatchThreeScaleServiceDefault handles this case with default header values.

generic API error response
*/
type PatchThreeScaleServiceDefault struct {
	_statusCode int

	Payload *models.APIErrorPayload
}

// Code gets the status code for the patch three scale service default response
func (o *PatchThreeScaleServiceDefault) Code() int {
	return o._statusCode
}

func (o *PatchThreeScaleServiceDefault) Error() string {
	return fmt.Sprintf("[PATCH /v1.0/kiali/threescale/namespaces/{namespace}/services/{service}][%d] patchThreeScaleService default  %+v", o._statusCode, o.Payload)
}

func (o *PatchThreeScaleServiceDefault) GetPayload() *models.APIErrorPayload {
	return o.Payload
}

func (o *PatchThreeScaleServiceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
