// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "sherlock-terraform-provider-nutanixkps/generated/kps_cloud_api_swagger/models"
)

// AuditLogGetReader is a Reader for the AuditLogGet structure.
type AuditLogGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuditLogGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuditLogGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAuditLogGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuditLogGetOK creates a AuditLogGetOK with default headers values
func NewAuditLogGetOK() *AuditLogGetOK {
	return &AuditLogGetOK{}
}

/*AuditLogGetOK handles this case with default header values.

Ok
*/
type AuditLogGetOK struct {
	Payload []*models.AuditLog
}

func (o *AuditLogGetOK) Error() string {
	return fmt.Sprintf("[GET /v1/auditlogs/{id}][%d] auditLogGetOK  %+v", 200, o.Payload)
}

func (o *AuditLogGetOK) GetPayload() []*models.AuditLog {
	return o.Payload
}

func (o *AuditLogGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuditLogGetDefault creates a AuditLogGetDefault with default headers values
func NewAuditLogGetDefault(code int) *AuditLogGetDefault {
	return &AuditLogGetDefault{
		_statusCode: code,
	}
}

/*AuditLogGetDefault handles this case with default header values.

generic API error response
*/
type AuditLogGetDefault struct {
	_statusCode int

	Payload *models.APIErrorPayload
}

// Code gets the status code for the audit log get default response
func (o *AuditLogGetDefault) Code() int {
	return o._statusCode
}

func (o *AuditLogGetDefault) Error() string {
	return fmt.Sprintf("[GET /v1/auditlogs/{id}][%d] AuditLogGet default  %+v", o._statusCode, o.Payload)
}

func (o *AuditLogGetDefault) GetPayload() *models.APIErrorPayload {
	return o.Payload
}

func (o *AuditLogGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
