// Code generated by go-swagger; DO NOT EDIT.

package tenant

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new tenant API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for tenant API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
TenantCreate creates a tenant ntnx ignore

Creates a tenant by a privileged user
*/
func (a *Client) TenantCreate(params *TenantCreateParams, authInfo runtime.ClientAuthInfoWriter) (*TenantCreateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTenantCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TenantCreate",
		Method:             "POST",
		PathPattern:        "/v1.0/tenants",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TenantCreateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TenantCreateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*TenantCreateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
TenantDelete deletes a tenant ntnx ignore

Deletes a tenant by a privileged user
*/
func (a *Client) TenantDelete(params *TenantDeleteParams, authInfo runtime.ClientAuthInfoWriter) (*TenantDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTenantDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TenantDelete",
		Method:             "DELETE",
		PathPattern:        "/v1.0/tenants/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TenantDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TenantDeleteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*TenantDeleteDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
TenantGet gets tenant info ntnx ignore

Retrieves metadata for the current tenant.
*/
func (a *Client) TenantGet(params *TenantGetParams, authInfo runtime.ClientAuthInfoWriter) (*TenantGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTenantGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TenantGet",
		Method:             "GET",
		PathPattern:        "/v1.0/tenant",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TenantGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TenantGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*TenantGetDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
TenantGetByID gets tenant with the ID ntnx ignore

Gets the tenant with the ID.
*/
func (a *Client) TenantGetByID(params *TenantGetByIDParams, authInfo runtime.ClientAuthInfoWriter) (*TenantGetByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTenantGetByIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TenantGetByID",
		Method:             "GET",
		PathPattern:        "/v1.0/tenants/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TenantGetByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TenantGetByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*TenantGetByIDDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
