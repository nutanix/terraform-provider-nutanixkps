// Code generated by go-swagger; DO NOT EDIT.

package node_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "sherlock-terraform-provider-nutanixkps/generated/kps_cloud_api_swagger/models"
)

// NodeInfoGetReader is a Reader for the NodeInfoGet structure.
type NodeInfoGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodeInfoGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNodeInfoGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewNodeInfoGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodeInfoGetOK creates a NodeInfoGetOK with default headers values
func NewNodeInfoGetOK() *NodeInfoGetOK {
	return &NodeInfoGetOK{}
}

/*NodeInfoGetOK handles this case with default header values.

Ok
*/
type NodeInfoGetOK struct {
	Payload *models.NodeInfo
}

func (o *NodeInfoGetOK) Error() string {
	return fmt.Sprintf("[GET /v1.0/nodesinfo/{nodeId}][%d] nodeInfoGetOK  %+v", 200, o.Payload)
}

func (o *NodeInfoGetOK) GetPayload() *models.NodeInfo {
	return o.Payload
}

func (o *NodeInfoGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodeInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeInfoGetDefault creates a NodeInfoGetDefault with default headers values
func NewNodeInfoGetDefault(code int) *NodeInfoGetDefault {
	return &NodeInfoGetDefault{
		_statusCode: code,
	}
}

/*NodeInfoGetDefault handles this case with default header values.

generic API error response
*/
type NodeInfoGetDefault struct {
	_statusCode int

	Payload *models.APIErrorPayload
}

// Code gets the status code for the node info get default response
func (o *NodeInfoGetDefault) Code() int {
	return o._statusCode
}

func (o *NodeInfoGetDefault) Error() string {
	return fmt.Sprintf("[GET /v1.0/nodesinfo/{nodeId}][%d] NodeInfoGet default  %+v", o._statusCode, o.Payload)
}

func (o *NodeInfoGetDefault) GetPayload() *models.APIErrorPayload {
	return o.Payload
}

func (o *NodeInfoGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
